plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.8'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mysite'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	
	// 스프링부트 기본라이브러리.
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// 코드 변경시 서버가 재시작하는 기능.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// 롬복. @Data @Getter, @Setter 애너테이션을 사용목적
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// 단위테스트(JUnit)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter' 
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// spring data jpa. (vs. mybatis)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// 타임리프, 타임리프 레이아웃
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    
    // 서버 유효성검사
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // 스프링시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // 타임리프에서 스프링시큐리티 인증체크를 위한 목적
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    
    // 데이타베이스 드라이버
    // runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'   // com.mysql.cj.jdbc.Driver

}

tasks.named('test') {
	useJUnitPlatform()
}
